// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

import 'package:flutter_surrealdb/utils.dart';

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'options.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `try_from`

@freezed
sealed class CapabilitiesConfig with _$CapabilitiesConfig {
  const CapabilitiesConfig._();

  const factory CapabilitiesConfig.bool(
    bool field0,
  ) = CapabilitiesConfig_Bool;
  const factory CapabilitiesConfig.capabilities({
    bool? scripting,
    bool? guestAccess,
    bool? liveQueryNotifications,
    Targets? functions,
    Targets? networkTargets,
  }) = CapabilitiesConfig_Capabilities;
}

class Options {
  final bool? strict;
  final int? queryTimeout;
  final int? transactionTimeout;
  final CapabilitiesConfig? capabilities;

  const Options({
    this.strict,
    this.queryTimeout,
    this.transactionTimeout,
    this.capabilities,
  });

  @override
  int get hashCode =>
      strict.hashCode ^
      queryTimeout.hashCode ^
      transactionTimeout.hashCode ^
      capabilities.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Options &&
          runtimeType == other.runtimeType &&
          strict == other.strict &&
          queryTimeout == other.queryTimeout &&
          transactionTimeout == other.transactionTimeout &&
          capabilities == other.capabilities;
}

@freezed
sealed class Targets with _$Targets {
  const Targets._();

  const factory Targets.bool(
    bool field0,
  ) = Targets_Bool;
  const factory Targets.array(
    Set<String> field0,
  ) = Targets_Array;
  const factory Targets.config({
    TargetsConfig? allow,
    TargetsConfig? deny,
  }) = Targets_Config;
}

@freezed
sealed class TargetsConfig with _$TargetsConfig {
  const TargetsConfig._();

  const factory TargetsConfig.bool(
    bool field0,
  ) = TargetsConfig_Bool;
  const factory TargetsConfig.array(
    Set<String> field0,
  ) = TargetsConfig_Array;
}
